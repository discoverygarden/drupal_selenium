<?php

/**
 * @file
 * Selenium Drupal integration module.
 */

/**
 * Implements hook_form_alter().
 */
function selenium_form_simpletest_settings_form_alter(&$form, &$form_state) {
  // Get the default value, either from the form state or the Drupal variables.
  $url = selenium_settings_form_default_value('selenium_server_host', 'localhost:4444', $form_state);
  $form['selenium'] = array(
    '#type' => 'fieldset',
    '#title' => t('Selenium Settings'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  // The URL wrapper we need for the connection checker to auto-update.
  $form['selenium']['url_wrapper'] = array(
    '#prefix' => '<div id="selenium-url">',
    '#suffix' => '</div>',
    '#type' => 'markup',
  );
  // Includes a checker to see if the server has any issues.
  module_load_include('inc', 'selenium', 'includes/utilities');
  $confirmation_message = selenium_get_status_message($url);
  $form['selenium']['url_wrapper']['selenium_server_host'] = array(
    '#type' => 'textfield',
    '#title' => t('Selenium server host and port'),
    '#description' => t('The URL of the connection to Selenium web server. <br/> !confirmation_message', array(
      '!confirmation_message' => $confirmation_message)),
    '#default_value' => $url,
    '#ajax' => array(
      'callback' => 'selenium_update_div',
      'wrapper' => 'selenium-url',
      'effect' => 'fade',
      'event' => 'blur',
      'progress' => array('type' => 'throbber'),
    ),
  );
  // List of allowed browsers.
  // @TODO: This should be a lot more sensible than just "type e'm in!"
  $form['selenium']['selenium_allowed_browsers'] = array(
    '#type' => 'textarea',
    '#title' => t("Allowed Selenium Browsers"),
    '#description' => t("A list of permitted browsers for use by Selenium. These should be a comma-and-space-separated list of executable browsers available via \$PATH, e.g., 'firefix, chrome, opera, iexplorer'."),
    '#default_value' => variable_get('selenium_allowed_browsers', "firefox, chrome"),
  );
  $form['selenium']['selenium_verbose_logging'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable verbose WebDriver logging during tests'),
    '#description' => t("When enabled, this allows tests to pass back verbose results from Selenium WebDriver functions that were run successfully, but which are otherwise not necessarily useful to know about beyond debugging purposes."),
    '#default_value' => variable_get('selenium_verbose_logging', FALSE),
  );
}

/**
 * Updates the selenium-url div on the test settings form.
 *
 * @param array $form
 *   The test settings form.
 * @param array $form_state
 *   The state of the form.
 *
 * @return mixed
 *   The wrapper section of the form array.
 */
function selenium_update_div(array $form, array $form_state) {
  return $form['selenium']['url_wrapper'];
}

/**
 * Gets the current default value of the settings form.
 *
 * Handles the case where the current form state is different than the loaded
 * form state.
 *
 * @param string $name
 *   The name of the value to check.
 * @param string $default_value
 *   The default value of the value.
 * @param array $form_state
 *   The state of the form.
 *
 * @return string
 *   The value to be returned.
 */
function selenium_settings_form_default_value($name, $default_value, array &$form_state) {
  return isset($form_state['values'][$name]) ? $form_state['values'][$name] : variable_get($name, $default_value);
}
