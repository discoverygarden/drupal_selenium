<?php
/**
 * @file
 * A few sample tests to show how it can work.
 */

class SampleSeleniumTestCase extends DrupalSeleniumWebTestCase {

  /**
   * Gets test info.
   *
   * @see DrupalWebTestCase::getInfo()
   */
  public static function getInfo() {
    return array(
      'name' => 'Sample Selenium Test',
      'description' => 'A sample test for Drupal Selenium.',
      'group' => 'Drupal Selenium Integration Sample',
      'browsers' => array('firefox', 'chrome'),
    );
  }

  /**
   * Sets up the test.
   *
   * @see DrupalSeleniumWebTestCase::setUp()
   */
  public function setUp() {
    parent::setUp();
  }

  /**
   * Adds an article using postUrl, then asserts that it is filled out.
   */
  public function testPostUrl() {
    $user = $this->drupalCreateUser(array_keys(module_invoke_all('permission')));
    $this->drupalLogin($user);

    $title = $this->randomName();
    $body = $this->randomString();
    $edit = array(
      'title' => $title,
      'body[und][0][value]' => $body,
    );
    $this->postUrl('/node/add/article', $edit, 'Save');

    $this->assertUrl('node/1');
    $this->assertFieldById('page-title', $title);
    $this->assertTitle("$title | Drupal");
  }

  /**
   * Does the same thing as testPostUrl(), but manually.
   */
  public function testManualPost() {
    $user = $this->drupalCreateUser(array_keys(module_invoke_all('permission')));
    $this->drupalLogin($user);
    $this->openUrl('/node/add/article');

    $title = $this->randomName();
    $body = $this->randomString();

    $this->sendKeysToElement($this->getElement('name=title'), $title);
    $this->sendKeysToElement($this->getElement('name=body[und][0][value]'), $body);
    $this->clickSubmitButton('Save');

    $this->waitForElements('css=body');

    $this->assertUrl('node/1');
    $this->assertFieldById('page-title', $title);
    $this->assertTitle("$title | Drupal");
  }
}
